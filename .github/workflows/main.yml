name: CI/CD Pipeline

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      version:
        description: New version
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

#  version:
#    name: Create new version ${{ github.event.inputs.version }}
#    needs: build
#    runs-on: ubuntu-latest
#    steps:


  version_publish:
    name: Update version and publish package on NPM
#    needs: version
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Generate new version
        if: ${{ github.event.inputs.version }} != ''
        run: npm version ${{ github.event.inputs.version }}

      - name: Generate new version
        if: github.event_name == 'push'
        run: npm version patch

      - name: Push new version tag to repository
        run: git push origin main --tags
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 18
#          registry-url: https://registry.npmjs.org/
      - run: npm install
      - run: npm run build
      - run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}